name: webviz-subsurface-components

on:
  push:
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  schedule:
    # Run CI daily and check that tests are working with latest dependencies
    - cron: "0 0 * * *"

jobs:
  webviz-subsurface-components:
    # Run on all events defined above, except pushes which are neither to master nor with a substring [deploy test] in commit message
    if: github.event_name != 'push' || github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, '[deploy test]')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.8"
            run-performance-tests: false
          - python-version: "3.9"
            run-performance-tests: false
          - python-version: "3.10"
            run-performance-tests: false
            e2e-tests: true
          - python-version: "3.10" # This particular job in the matrix is allowed to fail(for performance and cypress test)
            run-performance-tests: true

    steps:
      - name: üìñ Checkout commit locally
        uses: actions/checkout@v2

      - name: üêç Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì¶ Install build dependencies
        # The deckgl types package runs a postscript to setup, but since we ignore scripts, we need to set it up manually.
        run: |

          # In https://github.com/equinor/webviz-subsurface-components/pull/1010 we
          # loosened up npm constraint to include npm version using lockfileVersion: 1
          # for downstream users. However in the development of this repository we
          # want to limit ourselves to lockfileVersion: 2. 
          # While waiting for dropping node 14 and npm 6 support, we include this manual
          # check:
          grep -q '"lockfileVersion": 2,' ./react/package-lock.json

          npm ci CYPRESS_INSTALL_BINARY=0 --ignore-scripts --prefix ./react
          npm run copy-package-json --prefix ./react
          pip install "werkzeug<2.1"  # ...while waiting for https://github.com/plotly/dash/issues/1992
          pip install "dash<2.5"  # Build issue upstream in dash==2.5
          pip install .[dependencies]
          pip install dash[dev]

      - name: ‚è≠Ô∏è Modifications when prerelease
        if: github.event.release.prerelease
        run: echo "NPM_PUBLISH_TAG=next" >> $GITHUB_ENV

      - name: üèóÔ∏è Build JavaScript part
        run: npm run build --prefix ./react

      - name: üì¶ Install webviz-subsurface-components with dependencies
        run: |
          pip install --upgrade pip
          pip install .

      - name: üì¶ Install test dependencies
        run: |
          pip install .[tests]
          wget https://chromedriver.storage.googleapis.com/$(wget https://chromedriver.storage.googleapis.com/LATEST_RELEASE -q -O -)/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip

      - name: üßæ List all installed packages
        run: pip freeze

      - name: üïµÔ∏è Check code style, linting and typechecking
        if: matrix.python-version == '3.8'
        run: |
          npm run validate --prefix ./react
          black --check webviz_subsurface_components/ tests/ setup.py examples/
          pylint webviz_subsurface_components/ tests/ setup.py examples/*.py --ignore well-completions-csv2json.py
          bandit -r -c ./bandit.yml webviz_subsurface_components/ tests/ setup.py examples/

      - name: ü§ñ Run performance tests
        if: github.event_name != 'release' && matrix.run-performance-tests
        run: npm run test_perf --prefix ./react

      - name: ü§ñ Run tests
        if: github.event_name != 'release' # Related to https://github.com/equinor/webviz-subsurface-components/issues/409
        run: |
          npm run test_correctness --prefix ./react
          pytest ./tests --headless

      # This action allows caching cypress dependencies
      - name: Cache Cypress
        if: github.event_name != 'release' && matrix.e2e-tests
        id: cache-cypress
        uses: actions/cache@v1
        with:
          # list of files to cache and restore
          path: ~/.cache/Cypress
          # An explicit key for restoring and saving the cache
          key: cypress-cache-v2-${{ runner.os }}-${{ hashFiles('**/package.json') }}

      # now let's install Cypress binary
      - name: install cypress binary
        if: github.event_name != 'release' && matrix.e2e-tests
        run: |
          echo "${{ github.event.pull_request.head.repo.full_name }}"
          echo "${{ github.head_ref }}"
          echo "${{ github.event.pull_request.head.ref }}"
          cd react
          npx cypress install

      # run the cypress tests
      - name: e2e on firefox
        if: github.event_name != 'release' && matrix.e2e-tests
        run: |
          cd react
          npx cypress run -b chrome --component --headed

      # upload the failure screenshots for reference
      - name: upload artfacts
        uses: actions/upload-artifact@v2
        if: github.event_name != 'release' && failure() && matrix.e2e-tests
        with:
          name: cypress-screenshots
          path: |
            react/cypress/screenshots
            react/cypress-visual-screenshots
          retention-days: 5

      - name: check if the tests failed due to difference in snapshots
        id: check_file_changed
        if: github.event_name != 'release' && matrix.e2e-tests && failure()
        run: |
          if [[ -d react/cypress-visual-screenshots/diff ]]
          then
            echo ::set-output name=docs_changed::true
          else
            echo ::set-output name=docs_changed::false
          fi

      - name: replace newly captured snapshots
        if: steps.check_file_changed.outputs.docs_changed == 'true' && failure()
        run: |
          cd react
          npx cypress-image-diff -u
          rm -rf cypress-visual-screenshots/comparison
          rm -rf cypress-visual-screenshots/diff
          rm -rf cypress/screenshots
          rm -rf cypress/videos

      - name: create pull request
        if: steps.check_file_changed.outputs.docs_changed == 'true' && failure()
        run: | 
          git config user.name ${{ github.actor }}
          git checkout -b update_snaps
          git commit -am "updating snapshots"
          gh pr create --reviewer ${{ github.actor }} -B ${{ github.actor }}:${{ github.head_ref }} -H ${{ github.actor }}:update_snaps --title 'Cypress - New Snapshots for PR number ${{ github.event.number }} by ${{ github.actor }}' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: üîº Build and publish Node.js package
        if: github.event_name == 'release' && matrix.python-version == '3.8'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ./react
        run: |
          cp ../README.md .
          npm version --no-git-tag-version ${GITHUB_REF//refs\/tags\//}
          npm config set '//registry.npmjs.org/:_authToken' '${NPM_TOKEN}'
          npm config set always-auth true
          # Use 'latest' tag if $NPM_PUBLISH_TAG is not set:
          npm publish --access public --tag ${NPM_PUBLISH_TAG:-latest}

      - name: üö¢ Build and deploy Python package
        if: github.event_name == 'release' && matrix.python-version == '3.8'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_webviz_token }}
        run: |
          export SETUPTOOLS_SCM_PRETEND_VERSION=${GITHUB_REF//refs\/tags\//}
          python -m pip install --upgrade setuptools wheel twine
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: üìö Build demo application
        run: npm run build:js-demo --prefix ./react

      - name: üìö Build Storybook
        run: npm run build-storybook --prefix ./react

      - name: üìö Update Storybook and GitHub demo application
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || contains(github.event.head_commit.message, '[deploy test]')) && matrix.python-version == '3.8'
        run: |
          cp -r ./react/{index.html,output.css,output.js,storybook-static} ..

          git config --local user.email "webviz-github-action"
          git config --local user.name "webviz-github-action"
          git fetch origin gh-pages
          git checkout --track origin/gh-pages
          git clean -f -f -d -x
          git rm -r --ignore-unmatch *

          mv ../{index.html,output.css,output.js,storybook-static} .

          git add .

          if git diff-index --quiet HEAD; then
            echo "No changes in documentation. Skip documentation deploy."
          else
            git commit -m "Update Github Pages"
            git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
          fi
